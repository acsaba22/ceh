* klao, baldvin es errge ceh-e
+ Közös megállapodások és repositoryk a linuxos fejlesztői környezeteinkről.
+ Hogy könnyű legyen mindenkinél működő programokat írni.
  - Pl. haskell header lehessen `#!/opt/ceh/bin/runhaskell' bonyolítás helyett.
+ Hogyha a hasznos csomagok mindenkinél fel legyenek telepítve.
  - Pl. ghc.
+ A megállapodások szándékosan minél egyszerűbb unifikációra
  törekszenek, nem absztrakcióra.
+ nix-et használunk package managementre, mert úgy tűnik, hogy meg
  lehet vele oldani egyszerűen bináris csomagok pontos repródukálását
  vegyes linuxok között.
+ a nix-ünk i686 és azt ajánljuk, hogy a gépeinken is i686 legyen a
  debian.  Ez nem követelmény és továbbá ajánlott az i686 debiant
  amd64 kernellel használni (ami tökéletesen működik), hogy lehetővé
  váljon esetenként amd64 kódok futtatása, ha a performance igényli.


* Requirements
+ Valamilyen értelmes linux (gubuntu, debian, ubuntu).
+ Intel architektúra (i686 vagy amd64, no arm please).
+ `sudo parancs' rootként futtat parancsot (tehát debianosoknak
  telepíteni kell a sudo-t)


* Inicializálás
sudo mkdir /opt/ceh
sudo chown $USER. /opt/ceh
chmod 0700 /opt/ceh
cd /opt/ceh
git clone stock@ib.risko.hu:ceh.git .
ln -s $HOME home


* Nix telepítés
/opt/ceh/scripts/nix-init.sh


* Nix használat
** Az /opt/ceh/bin-ben levő binárisok beszerzése új gépen
A /opt/ceh/bin-ben symlinkek vannak kizárólag a /nix/store/...-ra.
Egy új gépen természetesen ezek törött symlinkek, azonban a nix be
tudja szerezni őket a hashük alapján, ennek a módja:

nix-env -i /opt/ceh/bin/emacs

Avagy ha nagyon magabiztosak vagyunk:
nix-env -i /opt/ceh/bin/*


* TODO-k
Csinálni egy nix-env.sh-t, ami minden szükséges beállítást elvégez az
environmentben, kultúrált módon, hogy senki ne féljen besourceolni a
.bashrc-jéből és így shared lehessen, elsőre ezek jutnak eszembe:
  - LOCPATH=/usr/lib/locale
  - PATH=/opt/ceh/bin:$PATH
  - MANPATH
  - INFOPATH (van ilyen?)
  - PKG_CONFIG_PATH (librarykhez)

Eldönteni, hogy valóban ez a jó út, vagy pedig a man és info pageket,
meg .pc-ket is erősen kézben kellene tartanunk git-ben, mint a
binárisokat.  Az erős kézben tartásnak az az előnye, hogy csak az
jelenik meg, amit akarunk, nem fog véletlenül megjelenni egy olyan
manpage a nix-ből, amihez tartozó binárist igazából a debianból
használjuk.  Hátránya, hogy sok munka és mindig el fogjuk felejteni.

Hogy terjesztjük az olyan cuccokat, amikhez nem tartozik bináris,
legfőképp kipróbálni, hogy a cabal-t mennyire tudja ez kiváltani...
